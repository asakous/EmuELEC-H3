#!/bin/sh

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2019-present Shanti Gilbert (https://github.com/shantigilbert)

# Source predefined functions and variables
. /etc/profile

# Make sure retroarch is not running before starting emulationstation to avoid sound conflicts
while pgrep -x /usr/bin/retroarch >/dev/null; do
    systemctl stop retroarch
    sleep 1
done

# Wait for the time specified in ee_load.delay setting in emuelec.conf
LOADTIME=$(get_ee_setting ee_load.delay)
sleep $LOADTIME

# Kodi seems to set its own FB settings for 720p, so we revert them to one that work on ES, I use all resolutions just in case :)
/emuelec/scripts/setres.sh

# Lets try and find some roms on a mounted USB drive
# name of the file we need to put in the roms folder in your USB or SDCARD
ROMFILE="emuelecroms"

# Only run the USB check if the ROMFILE does not exists in /storage/roms, this can help for manually created symlinks or network shares
# or if you want to skip the USB rom mount for whatever reason
if  [ ! -f "/storage/roms/$ROMFILE" ]; then

# if the file is not present then we look for the file in connected USB media, and only return the first match 
FULLPATHTOROMS="$(find /media/*/roms/ -name $ROMFILE -maxdepth 1 | head -n 1)"

if [[ -z "${FULLPATHTOROMS}" ]]; then
# Can't find the ROMFILE, if the symlink exists, then remove it and restore the backup if it exists
  if [ -L "/storage/roms" ]; then
      rm /storage/roms
     if [ -d "/storage/roms2" ]; then
      mv /storage/roms2 /storage/roms
     fi 
  fi
else

# We back up the roms folder just in case
  mv /storage/roms /storage/roms2
# we strip the name of the file.
  PATHTOROMS=${FULLPATHTOROMS%$ROMFILE}

# this might be overkill but we need to double check that there is no symlink to roms folder already
# only delete the symlink if the ROMFILE is found.
# this could be bad if you manually create the symlink, but if you do that, then you know how to edit this file :) 
# but we need to find a better way
       
if  [ -L "/storage/roms" ]; then
 rm /storage/roms
fi 
   
# All the sanity checks have passed, we have a ROMFILE so we create the symlink to the roms in our USB
    ln -sTf "$PATHTOROMS" /storage/roms
  fi 
fi 

# Set audio to alsa if we are starting retroarch or pulseaudio otherwise
[[ "$1" == "retroarch" ]] && set_audio alsa || set_audio pulseaudio

TZ=$(sed -n 's|\s*system.timezone=\(.*\)|\1|p' /emuelec/configs/emuelec.conf)
echo "TIMEZONE=$TZ" > /storage/.cache/timezone
systemctl restart tz-data.service

# create charmap used for translations
locale=$(sed -n 's|\s*system.language=\(.*\)|\1|p' /emuelec/configs/emuelec.conf)
charmap="UTF-8"
lang="${locale}.${charmap}"
locpath="/emuelec/configs/locale"
i18npath="$locpath/i18n"
localepath="$locpath/$lang"

if [ $locale != "en_US" ]; then
	if [ ! -d $localepath ]; then
		export I18NPATH=$i18npath
		/usr/bin/localedef -f $charmap -i $locale $localepath
	fi
fi

export LOCPATH=$locpat
export LANG=$lang
export LANGUAGE=$lang
systemctl import-environment LANG
systemctl import-environment LOCPATH
systemctl import-environment I18NPATH
systemctl import-environment LANGUAGE
	
exit 0
